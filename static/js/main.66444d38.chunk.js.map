{"version":3,"sources":["app/hooks.ts","utils/axiosClient.ts","api/photo.ts","features/Server/serverSlice.ts","components/Loader/Loader.tsx","features/Options/optionSlice.ts","components/Card/Card.tsx","features/Photo/photoSlice.ts","components/Container/Container.tsx","app/store.ts","components/Header/Header.tsx","components/Options/Options.tsx","components/Modal/Modal.tsx","HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","baseURL","instance","axios","create","client","url","get","response","console","log","data","getPhotos","page","limit","getToServerAsync","createAsyncThunk","serverSlice","createSlice","name","initialState","storage","statusLoading","error","nextLoadingPhotoIndex","randomDelayLoading","reducers","add","state","action","push","payload","sortById","sort","a","b","Number","id","setStatusLoading","setError","loadNextPhoto","setRandomDelay","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectServerStorage","server","selectServerStatusLoading","selectRandomDelay","loadDataOnServer","dispatch","Loader","className","isVisible","showDeleted","width","height","optionsSlice","setVisible","setWidth","setHeight","setBorderRadius","resetOptions","someFunction","selectIsVisibleOptions","options","selectOptionsHeight","selectOptionsWidth","selectOptionsBorderRadius","selectStatusDeletedVisible","Card","content","author","download_url","status","cardStyle","minWidth","borderRadius","backgroundImage","backgroundSize","backgroundRepeat","classNames","CardLoader","style","isElementInList","array","requestId","findIndex","el","replaceDownloadedPhoto","photo","map","falseLoadingPhotoAsync","_","thunkAPI","getState","loadingPhoto","delay","Math","random","Promise","resolve","setTimeout","photosSlice","list","deleted","onFill","onFillLoadingStatus","changePhotoByRequestId","forEach","deletePhoto","deletedIndex","splice","length","restorePhoto","restoreIndex","restoreAll","setOnFill","clear","meta","selectVisible","photos","selectDeleted","selectOnFill","selectOnFillLoadingStatus","Container","onFillStatus","widthCard","heightCard","useState","countPlaces","setCountPlaces","widthWindow","window","innerWidth","countW","floor","heightWindow","innerHeight","countH","useEffect","document","addEventListener","scrollHandler","removeEventListener","e","target","documentElement","scrollHeight","scrollTop","onCross","rootReducer","combineReducers","photosReducer","optionsReducer","serverReducer","persistConfig","key","whitelist","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","Header","isVisibleOptions","onFillByThunk","isOptionsVisible","timerRef","useRef","onFillCallBack","onFillSetTimeOut","setOnFillSetTimeOut","onFillHandler","current","setInterval","clearInterval","startOnFillSetTimeOut","type","onClick","purge","location","reload","Options","visible","initialWidth","initialHeight","initialBorderRadius","isRandomDelay","setValues","handleChange","event","field","value","onSubmit","preventDefault","htmlFor","onChange","role","tabIndex","onKeyDown","Modal","closeModal","item","HomePage","isVisibleDeleted","App","virgin","setVirgin","ReactDOM","createRoot","getElementById","render","StrictMode","loading"],"mappings":"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","file":"static/js/main.66444d38.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// export const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import axios from 'axios';\n\nconst baseURL = 'https://picsum.photos';\n\nconst instance = axios.create({\n  baseURL,\n});\n\ntype FetchData = {\n};\n\nexport const client = {\n  async get<T>(url: string) {\n    const response = await instance.get<T>(url);\n\n    // eslint-disable-next-line no-console\n    console.log('fetch to', baseURL + url);\n\n    return response.data;\n  },\n\n  async post<T>(url: string, data: FetchData) {\n    const response = await instance.post<T>(url, data);\n\n    return response.data;\n  },\n\n  async patch<T>(url: string, data: FetchData) {\n    const response = await instance.patch<T>(url, data);\n\n    return response.data;\n  },\n\n  async delete(url: string) {\n    return instance.delete(url);\n  },\n};\n","import { Photo } from '../type/Photo';\nimport { client } from '../utils/axiosClient';\n\nexport const getPhotos = (page: number, limit: number) => {\n  return client.get<Photo[]>(`v2/list?page=${page}&limit=${limit}`);\n};\n","import {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\nimport { getPhotos } from '../../api/photo';\n// eslint-disable-next-line import/no-cycle\nimport {\n  AppDispatch,\n  RootState,\n} from '../../app/store';\nimport { Photo } from '../../type/Photo';\n\nexport interface ServerState {\n  storage: Photo[];\n  statusLoading: 'idle' | 'loading' | 'failed';\n  error: unknown;\n\n  nextLoadingPhotoIndex: number;\n  randomDelayLoading: boolean;\n}\n\nconst initialState: ServerState = {\n  storage: [] as Photo[],\n  statusLoading: 'idle',\n  error: null,\n  nextLoadingPhotoIndex: 0,\n  randomDelayLoading: false,\n};\n\nexport const getToServerAsync = createAsyncThunk(\n  'server/fetchPhotos',\n  async (\n    { page, limit = 100 }: {page: number; limit: number},\n    // { dispatch, rejectWithValue },\n  ) => {\n    // const responseFinal: Photo[] = [];\n\n    const response: Photo[] = await getPhotos(page, limit);\n\n    // responseFinal.push(...response);\n\n    return response;\n  },\n);\n\nconst serverSlice = createSlice({\n  name: 'server',\n  initialState,\n  reducers: {\n    add: (state: ServerState, action) => {\n      state.storage.push(...action.payload);\n    },\n    sortById: (state: ServerState) => {\n      state.storage.sort((a, b) => Number(a.id) - Number(b.id));\n    },\n    setStatusLoading: (\n      state: ServerState,\n      action: PayloadAction<'idle' | 'loading' | 'failed'>,\n    ) => {\n      // eslint-disable-next-line no-param-reassign\n      state.statusLoading = action.payload;\n    },\n    setError: (\n      state: ServerState,\n      action: PayloadAction<unknown>,\n    ) => {\n      // eslint-disable-next-line no-param-reassign\n      state.error = action.payload;\n      // eslint-disable-next-line no-param-reassign\n      state.statusLoading = 'failed';\n    },\n    loadNextPhoto: (state) => {\n      // eslint-disable-next-line no-param-reassign\n      state.nextLoadingPhotoIndex += 1;\n    },\n    setRandomDelay: (state, action: PayloadAction<boolean>) => {\n      // eslint-disable-next-line no-param-reassign\n      state.randomDelayLoading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(getToServerAsync.pending, (\n        state: ServerState,\n        // action: PayloadAction<'idle' | 'loading' | 'failed'>\n      ) => {\n        // eslint-disable-next-line no-param-reassign\n        state.statusLoading = 'loading';\n      })\n      .addCase(getToServerAsync.fulfilled, (state, action) => {\n        action.payload.sort((a, b) => Number(a.id) - Number(b.id));\n\n        state.storage.push(...action.payload);\n        // eslint-disable-next-line no-param-reassign\n        state.statusLoading = 'idle';\n      })\n      .addCase(getToServerAsync.rejected, (state) => {\n        // eslint-disable-next-line no-param-reassign\n        state.statusLoading = 'failed';\n      });\n  },\n});\n\nexport default serverSlice.reducer;\nexport const {\n  add,\n  sortById,\n  setStatusLoading,\n  setError,\n  loadNextPhoto,\n  setRandomDelay,\n} = serverSlice.actions;\n\nexport const selectServerStorage = (state: RootState) => state.server.storage;\nexport const selectServerStatusLoading = (state: RootState) => state.server.statusLoading;\nexport const selectError = (state: RootState) => state.server.error;\nexport const selectRandomDelay = (state: RootState) => state.server.randomDelayLoading;\n\nexport const loadDataOnServer = (dispatch: AppDispatch) => {\n  try {\n    dispatch(getToServerAsync({ page: 1, limit: 100 }));\n  } catch (error) {\n    dispatch(setError(error));\n  }\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable no-param-reassign */\nimport {\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../app/store';\n\nexport interface OptionsState {\n  isVisible: boolean;\n  showDeleted: boolean;\n  width: number;\n  height: number;\n  'border-radius': number;\n}\n\nconst initialState: OptionsState = {\n  isVisible: false,\n  showDeleted: false,\n  width: 350,\n  height: 250,\n  'border-radius': 5,\n};\n\nconst optionsSlice = createSlice({\n  name: 'options',\n  initialState,\n  reducers: {\n    setVisible: (state: OptionsState, action: PayloadAction<boolean>) => {\n      state.isVisible = action.payload;\n    },\n    setWidth: (state: OptionsState, action: PayloadAction<number>) => {\n      if (action.payload > 0 && action.payload <= 350) {\n        state.width = action.payload;\n      }\n    },\n    setHeight: (state: OptionsState, action: PayloadAction<number>) => {\n      if (action.payload > 0 && action.payload <= 350) {\n        state.height = action.payload;\n      }\n    },\n    setBorderRadius: (state: OptionsState, action: PayloadAction<number>) => {\n      if (action.payload >= 0 && action.payload <= 50) {\n        state['border-radius'] = action.payload;\n      }\n    },\n    resetOptions: (state: OptionsState) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      state = initialState;\n    },\n    someFunction: (state: OptionsState) => {\n      state.showDeleted = !state.showDeleted;\n    },\n  },\n});\n\nexport default optionsSlice.reducer;\n\nexport const {\n  setVisible,\n  setWidth,\n  setHeight,\n  setBorderRadius,\n  resetOptions,\n  someFunction,\n} = optionsSlice.actions;\n\nexport const selectIsVisibleOptions = (state: RootState) => state.options.isVisible;\nexport const selectOptionsHeight = (state: RootState) => state.options.height;\nexport const selectOptionsWidth = (state: RootState) => state.options.width;\nexport const selectOptionsBorderRadius = (state: RootState) => state.options['border-radius'];\nexport const selectStatusDeletedVisible = (state: RootState) => state.options.showDeleted;\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectOptionsBorderRadius, selectOptionsHeight, selectOptionsWidth } from '../../features/Options/optionSlice';\nimport { PhotoElement } from '../../type/PhotoElement';\nimport './Card.scss';\n\ninterface CardProps {\n  content: PhotoElement;\n  onCross: () => void;\n}\n\nexport const Card: FunctionComponent<CardProps> = ({\n  content,\n  // onCross,\n}) => {\n  const {\n    // id,\n    author,\n    // url,\n    download_url,\n    status,\n  } = content;\n\n  const cardStyle = {\n    width: useAppSelector(selectOptionsWidth),\n    minWidth: '200px',\n    // 'width' : !download_url ? '200px' : '',\n    height: useAppSelector(selectOptionsHeight),\n    borderRadius: useAppSelector(selectOptionsBorderRadius),\n    backgroundImage: `url(${download_url})`,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n  };\n\n  return (\n    <div\n      className={classNames('Card',\n        { CardLoader: status === 'loading' })}\n      style={cardStyle}\n    >\n      { status === 'loading' && (\n        <div className=\"CardLoader__content\" />\n      )}\n\n      {(status === 'idle') && (\n        <div className=\"Card--visible\">\n          <div className=\"Card__title\">{author}</div>\n\n          {/* <div\n            className=\"Card__button-cross\"\n            onClick={onCross}\n            onKeyPress={onKeyPressHandler}\n            role=\"button\"\n          >\n          </div> */}\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable no-param-reassign */\nimport {\n  createAsyncThunk,\n  createSlice,\n  PayloadAction,\n} from '@reduxjs/toolkit';\n// eslint-disable-next-line import/no-cycle\nimport { RootState } from '../../app/store';\nimport { PhotoElement } from '../../type/PhotoElement';\n// eslint-disable-next-line import/no-cycle\nimport { loadNextPhoto } from '../Server/serverSlice';\n\nfunction isElementInList(\n  array: PhotoElement[],\n  requestId: string,\n):boolean {\n  return array.findIndex(el => el.requestId === requestId) >= 0;\n}\n\nfunction replaceDownloadedPhoto(\n  array: PhotoElement[],\n  requestId: string,\n  photo: PhotoElement,\n): PhotoElement[] {\n  return array.map((el: PhotoElement) => (el.requestId !== requestId\n    ? el\n    : {\n      ...el,\n      ...photo as PhotoElement,\n      status: 'idle',\n      requestId: null,\n    }));\n}\n\nexport interface PhotosState {\n  list: PhotoElement[];\n  deleted: PhotoElement[];\n  onFill: boolean;\n  onFillLoadingStatus: 'idle' | 'loading';\n}\n\nconst initialState: PhotosState = {\n  list: [] as PhotoElement[],\n  deleted: [] as PhotoElement[],\n  onFill: false,\n  onFillLoadingStatus: 'idle',\n};\n\nexport const falseLoadingPhotoAsync = createAsyncThunk(\n  'photo/fetchPhoto',\n  async (_, thunkAPI) => {\n    // console.log('falseLoadingPhotoAsync body async function');\n    const state = thunkAPI.getState() as RootState;\n    // eslint-disable-next-line prefer-destructuring\n    const server = state.server;\n    const loadingPhoto = server.storage[server.nextLoadingPhotoIndex];\n\n    thunkAPI.dispatch(loadNextPhoto());\n\n    let delay = 300;\n\n    if (state.server.randomDelayLoading) {\n      delay = 1000 + 3000 * Math.random();\n    }\n\n    const response = await new Promise(resolve => {\n      setTimeout(() => {\n        return resolve(\n          {\n            ...loadingPhoto,\n            requestId: thunkAPI.requestId,\n            status: 'loading',\n          } as PhotoElement,\n        );\n      }, delay);\n    });\n\n    return response;\n  },\n  // {\n  //   condition: (_, { getState }) => {\n  //     const { photos } = getState() as RootState;\n\n  //     console.log('condition cancelling',\n  //     photos.onFillLoadingStatus === 'loading' && photos.onFill);\n\n  //     return !(photos.onFillLoadingStatus === 'loading' && photos.onFill);\n  //   }\n  // }\n);\n\nconst photosSlice = createSlice({\n  name: 'photo',\n  initialState,\n  reducers: {\n    changePhotoByRequestId: (state: PhotosState, action: PayloadAction<{\n      requestId: string,\n      photo: PhotoElement,\n      status: 'idle' | 'loading' | 'failed',\n    }>) => {\n      state.list.forEach((el: PhotoElement) => (el.requestId !== action.payload.requestId\n        ? el\n        : { ...el, ...action.payload.photo, status: action.payload.status }\n      ));\n    },\n    deletePhoto: (state: PhotosState, action:PayloadAction<string | null | undefined>) => {\n      if (action.payload) {\n        const deletedIndex = state.list.findIndex(photo => photo.id === action.payload);\n\n        if (deletedIndex) {\n          state.deleted.push(...state.list.splice(deletedIndex, 1));\n        }\n      } else {\n        // if action.payload is undefined\n        // eslint-disable-next-line no-lonely-if\n        if (state.list.length) {\n          state.deleted.push(state.list[state.list.length - 1]);\n          // eslint-disable-next-line no-plusplus\n          state.list.length -= 1;\n        }\n      }\n    },\n    restorePhoto: (state: PhotosState, action: PayloadAction<string>) => {\n      if (action.payload) {\n        const restoreIndex = state.deleted.findIndex(photo => photo.id === action.payload);\n\n        if (restoreIndex) {\n          state.list.push(...state.deleted.splice(restoreIndex, 1));\n        }\n      }\n    },\n    restoreAll: (state: PhotosState) => {\n      state.list.push(...state.deleted);\n      state.deleted.length = 0;\n    },\n    setOnFill: (state: PhotosState, action: PayloadAction<boolean>) => {\n      state.onFill = action.payload;\n    },\n    clear: (state) => {\n      state.deleted.push(...state.list.splice(1));\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // get photo from server - false load data from server\n      .addCase(falseLoadingPhotoAsync.pending, (state, action) => {\n        // console.log('falseLoadingPhotoAsync.pending');\n\n        if (state.onFill) {\n          state.onFillLoadingStatus = 'loading';\n        }\n\n        const loadingPhoto: PhotoElement = {\n          id: null,\n          author: null,\n          width: null,\n          height: null,\n          url: null,\n          download_url: null,\n          requestId: action.meta.requestId,\n          status: 'loading',\n        };\n\n        state.list.push(loadingPhoto);\n      })\n      .addCase(falseLoadingPhotoAsync.fulfilled, (state, action) => {\n        // console.log('falseLoadingPhotoAsync.fulfilled');\n        const { requestId } = action.meta;\n\n        if (state.onFill) {\n          state.onFillLoadingStatus = 'idle';\n        }\n\n        if (isElementInList(state.list, requestId)) {\n          state.list = replaceDownloadedPhoto(\n            state.list,\n            requestId,\n            action.payload as PhotoElement,\n          );\n        } else if (isElementInList(state.deleted, requestId)) {\n          state.deleted = replaceDownloadedPhoto(\n            state.deleted,\n            requestId,\n            action.payload as PhotoElement,\n          );\n        }\n\n        if (state.onFill && state.onFillLoadingStatus === 'loading') {\n          state.onFillLoadingStatus = 'idle';\n        }\n      })\n      .addCase(falseLoadingPhotoAsync.rejected, () => {\n      });\n  },\n});\n\nexport default photosSlice.reducer;\nexport const {\n  changePhotoByRequestId,\n  deletePhoto,\n  restorePhoto,\n  restoreAll,\n  setOnFill,\n  clear,\n} = photosSlice.actions;\n\nexport const selectVisible = (state: RootState) => state.photos.list;\nexport const selectDeleted = (state: RootState) => state.photos.deleted;\nexport const selectOnFill = (state: RootState) => state.photos.onFill;\nexport const selectOnFillLoadingStatus = (state: RootState) => state.photos.onFillLoadingStatus;\n","import React, {\n  FunctionComponent,\n  useEffect,\n  // useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { Card } from '../Card';\nimport {\n  deletePhoto,\n  falseLoadingPhotoAsync,\n  selectOnFill,\n  selectOnFillLoadingStatus,\n  selectVisible,\n} from '../../features/Photo/photoSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport './Container.scss';\nimport { selectOptionsHeight, selectOptionsWidth } from '../../features/Options/optionSlice';\n\nexport const Container: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const onFill = useAppSelector(selectOnFill);\n  const onFillStatus = useAppSelector(selectOnFillLoadingStatus);\n  const photos = useAppSelector(selectVisible);\n  const widthCard = useAppSelector(selectOptionsWidth);\n  const heightCard = useAppSelector(selectOptionsHeight);\n\n  const [countPlaces, setCountPlaces] = useState(0);\n\n  const widthWindow = window.innerWidth < 1280 ? window.innerWidth : 1280;\n  const countW = Math.floor((widthWindow - 40 + 20) / (widthCard + 20));\n\n  const heightWindow = window.innerHeight - 66 - 40 - 24.900 * 2;\n  const countH = Math.floor((heightWindow + 20) / (heightCard + 20));\n\n  useEffect(() => {\n    if (onFill && onFillStatus === 'idle' && photos.length < countPlaces) {\n      dispatch(falseLoadingPhotoAsync());\n    }\n  });\n\n  useEffect(() => {\n    setCountPlaces(countW * (countH + 1));\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    document.addEventListener('scroll', () => scrollHandler);\n\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return () => document.removeEventListener('scroll', () => scrollHandler);\n  }, []);\n\n  const scrollHandler = (\n    e: { target: { documentElement: { scrollHeight: number; scrollTop: number; }; }; },\n  ) => {\n    if (e.target.documentElement.scrollHeight\n    - window.innerHeight\n    - e.target.documentElement.scrollTop < 100\n    && onFill) {\n      setCountPlaces(countPlaces + countW);\n    }\n  };\n\n  return (\n    <>\n      <ul\n        className={classNames('Container')}\n      >\n        {photos.map(el => (\n          <li key={el.requestId || el.id}>\n            <Card\n              content={el}\n              onCross={() => dispatch(deletePhoto(el.id))}\n            />\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import {\n  configureStore,\n  ThunkAction,\n  Action,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n// eslint-disable-next-line import/no-cycle\nimport photosReducer from '../features/Photo/photoSlice';\n// eslint-disable-next-line import/no-cycle\nimport optionsReducer from '../features/Options/optionSlice';\n// eslint-disable-next-line import/no-cycle\nimport serverReducer from '../features/Server/serverSlice';\n\nconst rootReducer = combineReducers({\n  photos: photosReducer,\n  options: optionsReducer,\n  server: serverReducer,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['photos', 'options'],\n  // blacklist: ['server', 'viewport'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER, 'server'],\n    },\n  }),\n});\n\nexport default store;\n\nexport const persistor = persistStore(store);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\n/* eslint-disable @typescript-eslint/indent */\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","import React, {\n  FunctionComponent,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { persistor } from '../../app/store';\nimport { setVisible, selectIsVisibleOptions, someFunction } from '../../features/Options/optionSlice';\nimport {\n  clear,\n  deletePhoto,\n  falseLoadingPhotoAsync,\n  selectOnFill,\n  setOnFill,\n} from '../../features/Photo/photoSlice';\nimport { selectServerStorage } from '../../features/Server/serverSlice';\nimport './Header.scss';\nimport '../../layout/button.scss';\n\nexport const Header: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const isVisibleOptions = useAppSelector(selectIsVisibleOptions);\n  const onFillByThunk = useAppSelector(selectOnFill);\n  const isOptionsVisible = useAppSelector(selectIsVisibleOptions);\n  const timerRef = useRef<NodeJS.Timeout | null>(null);\n\n  // eslint-disable-next-line no-console\n  console.log(useAppSelector(selectServerStorage));\n\n  const onFillCallBack = () => dispatch(falseLoadingPhotoAsync());\n  const [onFillSetTimeOut, setOnFillSetTimeOut] = useState(false);\n\n  const startOnFillSetTimeOut = (status: boolean) => {\n    if (status) {\n      timerRef.current = setInterval(onFillCallBack, 3000);\n    } else {\n      clearInterval(timerRef.current as NodeJS.Timeout);\n    }\n  };\n\n  const onFillHandler = (status: boolean) => {\n    setOnFillSetTimeOut(!status);\n    startOnFillSetTimeOut(!status);\n  };\n\n  const purge = () => {\n    persistor.purge();\n    window.location.reload();\n  };\n\n  return (\n    <header className=\"Header\">\n      <button\n        type=\"button\"\n        onClick={() => dispatch(falseLoadingPhotoAsync())}\n        className={classNames('Header__button', 'button')}\n      >\n        Add\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(deletePhoto())}\n        className={classNames('Header__button', 'button')}\n      >\n        Delete\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch(setOnFill(!onFillByThunk));\n        }}\n        className={classNames('Header__button', 'button',\n          { 'button--active': onFillByThunk })}\n      >\n        FillByThunk\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => onFillHandler(onFillSetTimeOut)}\n        className={classNames('Header__button', 'button',\n          { 'button--active': onFillSetTimeOut })}\n      >\n        FillBySetTimeInterval\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(clear())}\n        className={classNames('Header__button', 'button')}\n      >\n        Clear\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(setVisible(!isVisibleOptions))}\n        className={classNames('Header__button', 'button',\n          { 'button--active': isOptionsVisible })}\n      >\n        Options\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => dispatch(someFunction())}\n        className={classNames('Header__button', 'button')}\n      >\n        Show Deleted\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => purge()}\n        className={classNames('Header__button', 'button')}\n      >\n        Purge\n      </button>\n    </header>\n  );\n};\n","import React, { FunctionComponent, useState } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectOptionsHeight,\n  selectOptionsWidth,\n  selectIsVisibleOptions,\n  setHeight,\n  setWidth,\n  setBorderRadius,\n  selectOptionsBorderRadius,\n  setVisible,\n} from '../../features/Options/optionSlice';\nimport { selectRandomDelay, setRandomDelay } from '../../features/Server/serverSlice';\nimport './Options.scss';\nimport '../../layout/custom_checkbox.scss';\n\nexport const Options: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const visible = useAppSelector(selectIsVisibleOptions);\n  const initialWidth = useAppSelector(selectOptionsWidth);\n  const initialHeight = useAppSelector(selectOptionsHeight);\n  const initialBorderRadius = useAppSelector(selectOptionsBorderRadius);\n  const isRandomDelay = useAppSelector(selectRandomDelay);\n\n  const [{\n    width, height, 'border-radius': borderRadius,\n  }, setValues] = useState({\n    width: initialWidth,\n    height: initialHeight,\n    'border-radius': initialBorderRadius,\n  });\n\n  // useEffect(() => {\n  //   setValues({\n  //     width: initialWidth,\n  //     height: initialHeight,\n  //   })\n  // }, [initialWidth, initialHeight])\n\n  // const resetValues = () => {\n  //   setValues({\n  //     width: initialWidth,\n  //     height: initialHeight,\n  //     'border-radius': initialBorderRadius,\n  //   });\n  // };\n\n  const handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n  ) => {\n    const { name: field, value } = event.target;\n\n    setValues(current => ({ ...current, [field]: +value }));\n    // setErrors(current => ({ ...current, [field]: false }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    dispatch(setWidth(width));\n    dispatch(setHeight(height));\n    dispatch(setBorderRadius(borderRadius));\n    dispatch(setVisible(false));\n  };\n\n  return (\n    visible\n      ? (\n        <form\n          onSubmit={(event) => handleSubmit(event)}\n          className=\"Options\"\n        >\n          <div>\n            <div className=\"Options__field\">\n              <label htmlFor=\"width\">\n                width&nbsp;\n                <input\n                  type=\"text\"\n                  name=\"width\"\n                  id=\"width\"\n                  onChange={handleChange}\n                  className=\"Options__input\"\n                  value={width}\n                />\n                &nbsp;px\n              </label>\n            </div>\n\n            <div className=\"Options__field\">\n              <label htmlFor=\"height\">\n                height&nbsp;\n                <input\n                  type=\"text\"\n                  name=\"height\"\n                  id=\"height\"\n                  onChange={handleChange}\n                  className=\"Options__input\"\n                  value={height}\n                />\n                &nbsp;px\n              </label>\n            </div>\n\n            <div className=\"Options__field\">\n              <label htmlFor=\"height\">\n                border-radius&nbsp;\n                <input\n                  type=\"text\"\n                  name=\"border-radius\"\n                  id=\"height\"\n                  onChange={handleChange}\n                  className=\"Options__input\"\n                  value={borderRadius}\n                />\n                &nbsp;px\n              </label>\n            </div>\n\n            <div className=\"Options__field\">\n              {/* <label htmlFor=\"delay\"> */}\n              random delay&nbsp;\n              <div\n                role=\"checkbox\"\n                aria-checked=\"false\"\n                aria-labelledby=\"delay\"\n                tabIndex={0}\n                className={classNames('custom-checkbox',\n                  { 'custom-checkbox--checked': isRandomDelay })}\n                onClick={() => dispatch(setRandomDelay(!isRandomDelay))}\n                onKeyDown={() => {}}\n              >\n              </div>\n              {/* </label> */}\n            </div>\n\n            <div className=\"Options__field\">\n              <button type=\"submit\" className=\"Options__bottom\">Submit</button>\n            </div>\n          </div>\n        </form>\n      ) : null\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch } from '../../app/hooks';\nimport { restoreAll, restorePhoto } from '../../features/Photo/photoSlice';\nimport { PhotoElement } from '../../type/PhotoElement';\nimport { Card } from '../Card';\nimport './Modal.scss';\n\ninterface ModalProps {\n  closeModal: (value: boolean) => void;\n  content: PhotoElement[];\n}\n\nconst Modal: FunctionComponent<ModalProps> = ({\n  closeModal,\n  content,\n}) => {\n  const dispatch = useAppDispatch();\n  const restore = (id:string | null) => (id ? dispatch(restorePhoto(id)) : null);\n\n  return (\n    <div className=\"Modal\">\n      <div className=\"Modal__header\">\n        <h2>Deleted</h2>\n\n        <div className=\"Modal__container\">\n          <button\n            type=\"button\"\n            onClick={() => closeModal(false)}\n            className={classNames('Modal__button', 'button')}\n          >\n            Close\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => dispatch(restoreAll())}\n            className={classNames('Modal__button', 'button')}\n          >\n            Restore All\n          </button>\n        </div>\n      </div>\n\n      <ul className=\"Modal__list\">\n        {content.map((item: PhotoElement) => (\n          <li key={item.id || item.requestId}>\n            <Card\n              content={item}\n              onCross={() => restore(item.id)}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { FunctionComponent } from 'react';\nimport { Loader } from '../components/Loader';\nimport { Container } from '../components/Container';\nimport { useAppDispatch, useAppSelector } from '../app/hooks';\nimport { Header } from '../components/Header';\nimport { Options } from '../components/Options';\nimport { selectServerStatusLoading } from '../features/Server/serverSlice';\nimport { selectDeleted } from '../features/Photo/photoSlice';\nimport { selectStatusDeletedVisible, someFunction } from '../features/Options/optionSlice';\nimport Modal from '../components/Modal/Modal';\nimport './HomePage.scss';\n\nexport const HomePage: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const statusLoading = useAppSelector(selectServerStatusLoading);\n  const deleted = useAppSelector(selectDeleted);\n  const isVisibleDeleted = useAppSelector(selectStatusDeletedVisible);\n  // const [isScrollDown, setScrollDown] = useState(false);\n\n  // const headerHeight = 66;\n  // const titleHeight = 24.900 * 2 + 40;\n  // const rest = window.innerHeight - titleHeight;\n  // console.log('rest', rest, window.innerWidth);\n\n  // useEffect(() => {\n  //   if (onFill && onFillStatus === 'idle') {\n  //     dispatch(falseLoadingPhotoAsync());\n  //   }\n  // });\n\n  // useEffect(() => {\n  //   document.addEventListener('scroll', scrollHandler)\n\n  //   return () => document.removeEventListener('scroll', scrollHandler);\n  // }, []);\n\n  // const scrollHandler = (e: any) => {\n  //   console.log(e.target.documentElement.scrollHeight);\n  //   console.log(e.target.documentElement.scrollTop);\n  //   console.log(window.innerHeight);\n  //   if (e.target.documentElement.scrollHeight\n  //   - window.innerHeight - e.target.documentElement.scrollTop < 100 ) {\n  //     console.log('scroll');\n  //   };\n\n  // };\n\n  // console.log('render HomePage');\n\n  return (\n    <>\n      <Header />\n\n      <main className=\"HomePage__main\">\n        {(statusLoading === 'loading') && (\n          <Loader />\n        )}\n\n        {(statusLoading === 'failed') && (\n          <>Error</>\n        )}\n\n        {(statusLoading === 'idle') && (\n          <Container />\n        )}\n      </main>\n\n      {isVisibleDeleted && (\n        <Modal\n          closeModal={() => dispatch(someFunction())}\n          content={deleted}\n        />\n      )}\n\n      <Options />\n    </>\n  );\n};\n","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { loadDataOnServer, selectServerStorage } from './features/Server/serverSlice';\nimport { HomePage } from './HomePage';\nimport './App.scss';\n\nconst App: FunctionComponent = () => {\n  const dispatch = useAppDispatch();\n  const storage = useAppSelector(selectServerStorage);\n  const [virgin, setVirgin] = useState(true);\n\n  useEffect(() => {\n    dispatch(loadDataOnServer);\n  }, []);\n\n  if (storage.length > 0 && virgin) {\n    setVirgin(false);\n  }\n\n  return (\n    <HomePage />\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport store, { persistor } from './app/store';\nimport './index.scss';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}